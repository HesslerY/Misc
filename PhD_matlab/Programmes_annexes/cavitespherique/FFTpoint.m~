%clear
tic
disp('Cr�ation des sources')
load sphere200.mat


Rx=.995

%ordre=100 %ordre de calcul... nombre de r�flexions envisag�es
Lt=max(POS(:,1))/3e8; %longueur de la fenetre en s
CARTOfxH=[];
CARTOfyH=[];
CARTOfzH=[];

%Signal puls�
tau=Lt; %longueur du pulse en s
f0=1e9; %µfréquence du pulse en Hz
%N=round(30*Lt*f0) %nombre de points de la simulation globale
N=80000
t=0:Lt/(N-1):Lt; %�chelle de temps

x=0:1/((N-1)/Lt):tau;
s=sin(2*pi*f0*x); %train d'onde sinusoidal


d=1; %dirac


%l=8.7; %longueur du segment
%p=3.7;
%h=2.9;
c=3e8;%

dmax=c*Lt
%ordre=round(dmax/min([l;p;h]))

%filename = sprintf('%delem_%dnsmoduloez',1,round(Lt/(1e-9)));   

%load(filename)

disp('nbr sources')
length(POS)

disp('Calcul de la RI')
ordrelim=0;
CARTOtempo=[];
X_1=-.02%-.15:.0025:.15;
Y_1=.10%-.15:.0025:.15;
Z_1=.095%0;
ad=0;
% %special antennes
% POSANT=[];
% for g=1:1:length(POS)
%      if (POS(g,4)+POS(g,5)+POS(g,6))==0;
%          POSANT=[POSANT;POS(g,:)];
%          %disp(g)
%      end
% end
% %POS=POSANT

for dd=1:1:length(X_1)
    for ee=1:1:length(Y_1)
        if (X_1(dd)^2+Y_1(ee)^2)<=0.0225
        Sx=zeros(1,N);
        Sy=zeros(1,N);
        Sz=zeros(1,N);
            for j=1:1:length(POS)

        DX=X_1(dd)-POS(j,1);%D(j,1);
        DY=Y_1(ee)-POS(j,2);%D(j,2);
        DZ=Z_1-POS(j,3);%D(j,3);

        dist=sqrt(DX^2+DY^2+DZ^2);
        zl=round((N-1)*dist/c/Lt);

        if zl<N
            alpha=POS(j,7);
            beta=POS(j,8);
            ca=cos(alpha);
            sa=sin(alpha);
            cb=cos(beta);
            sb=sin(beta);
            %               Ralpbeta=[  (-sin(beta))^2+(1-(-sin(beta))^2)*cos(alpha)   -sin(beta)*cos(beta)*(1-cos(alpha)) cos(beta)*sin(alpha);
            %                         -sin(beta)*cos(beta)*(1-cos(alpha))      (cos(beta))^2+(1-(cos(beta))^2)*cos(alpha) sin(beta)*sin(alpha);
            %                         -cos(beta)*sin(alpha)                   -sin(beta)*sin(alpha)                        cos(alpha)];
            %
            %
            distx=((-sb)^2+(1-(-sb)^2)*ca)*DX+(-sb*cb*(1-ca))*DY+(cb*sa)*DZ;
            disty=(-sb*cb*(1-ca))*DX+((cb)^2+(1-cb^2)*ca)*DY+(sb*sa)*DZ;
            distz=(-cb*sa)*DX+(-sb*sa)*DY+(ca)*DZ;

            %             POSreperesource=Ralpbeta*[X_1-POS(j,1);Y_1-POS(j,2);Z_1-POS(j,3)];
            %             distx=(POSreperesource(1));
            %             disty=(POSreperesource(2));
            %             distz=(POSreperesource(3));




            distxy=sqrt(distx^2+disty^2);
            %o=POS(j,4)+POS(j,5)+POS(j,6);
            R=Rx^POS(j,4);%*Ry^POS(j,5)*Rz^POS(j,6);
            E=POS(j,5)*d/dist;%*(4*o^2+2)^(.5);
            costheta=distz/dist;
            sintheta=distxy/dist;
            cosphi=distx/distxy;
            sinphi=disty/distxy;
            Antth=-sintheta;

            %             Ralpbetainv=[  ((-sb)^2+(1-(-sb)^2)*ca) (-sb*cb*(1-ca)) (-cb*sa);
            %                         (-sb*cb*(1-ca)) ((cb)^2+(1-(cb)^2)*ca)  (-sb*sa);
            %                         (cb*sa) (sb*sa) ca];

            %V=Ralpbetainv*[(-sintheta*costheta*cosphi);(-sintheta*costheta*sinphi);(sintheta^2)]; %C'est ici !

            Vx=(((-sb)^2+(1-(-sb)^2)*ca)*(Antth*costheta*cosphi)+(-sb*cb*(1-ca))*(Antth*costheta*sinphi)+(-cb*sa)*(-sintheta*Antth));
            Vy=((-sb*cb*(1-ca))*(Antth*costheta*cosphi)+((cb)^2+(1-(cb)^2)*ca)*(Antth*costheta*sinphi)+(-sb*sa)*(-sintheta*Antth));
            Vz=((cb*sa)*(Antth*costheta*cosphi)+(sb*sa)*(Antth*costheta*sinphi)+ca*(-sintheta*Antth));

            Sx(zl+1)=Sx(zl+1)+R*E*Vx;
            Sy(zl+1)=Sy(zl+1)+R*E*Vy;
            Sz(zl+1)=Sz(zl+1)+R*E*Vz;

        end
    end

        %toc

        %Signal=sum(S);




        %------------------Convolutions---------------------%
% Six=conv(Sx,s);
% Siy=conv(Sy,s);
% Siz=conv(Sz,s);
% Signalx=Six(1:N);
% Signaly=Siy(1:N);
% Signalz=Siz(1:N);


%         CARTOtempox(dd,ee,:)=Signalx(1:N);
%         CARTOtempoy(dd,ee,:)=Signaly(1:N);
%         CARTOtempoz(dd,ee,:)=Signalz(1:N);
        
%         clear Six;
%         clear Siy;
%         clear Siz;
%         
%         clear Signalx;
%         clear Signaly;
%         clear Signalz;
       
        
        %




        %         %---------FFT-----------------------------%
                %disp('FFT 1')
                Fs = N/Lt;                    % Sampling frequency
                T = 1/Fs;                     % Sample time
                L = N; %400000;                     % Length of signal
                tt = (0:L-1)*T;                % Time vector
        
                NFFT = 2^nextpow2(N); % Next power of 2 from length of y
                Yx = fft((Sx),NFFT)/N;
                Yy = fft((Sy),NFFT)/N;
                Yz = fft((Sz),NFFT)/N;
                f = Fs/2*linspace(0,1,NFFT/2);
                Ax=abs(Yx(1:NFFT/2));
                Ay=abs(Yy(1:NFFT/2));
                Az=abs(Yz(1:NFFT/2));
                
               
                
                
                
       
    end
end

    
    
end

figure(1)
subplot(3,1,1)
plot(f/1e9,20*log10(Ax))
xlim([0 200e9])
xlabel('f en GHz')
title('Ex')
grid on

subplot(3,1,2)
plot(f/1e9,20*log10(Ay))
xlim([0 200e9])
title('Ey')
xlabel('f en GHz')
grid on

subplot(3,1,3)
plot(f/1e9,20*log10(Az))
xlim([0 200e9])
title('Ez')
xlabel('f en GHz')
grid on